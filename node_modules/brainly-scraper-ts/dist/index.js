"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }var _axios = require('axios'); var _axios2 = _interopRequireDefault(_axios);class Brainly{static async getData(query,limit=10){const graphqlQuery=`query SearchQuery($query: String!, $first: Int!, $after: ID) {
  questionSearch(query: $query, first: $first, after: $after) {
    edges {
      node {
        content
        attachments{
          url
        }
        answers {
          nodes {
            content
            attachments{
              url
            }
          }
        }
      }
    }
  }
}`;const config={url:"https://brainly.com/graphql/id",method:"POST",headers:{host:"brainly.com","Content-Type":"application/json; charset=utf-8","User-Agent":"Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:65.0) Gecko/20100101 Firefox/65.0"},data:{operationName:"SearchQuery",variables:{query,after:null,first:limit},query:graphqlQuery}};try{const response=await _axios2.default.request(config);const{edges}=await response.data.data.questionSearch;const results=edges.map(edge=>({question:edge.node.content.replace(/(<br \/>)/gi,"\n"),attachments:edge.node.attachments,answers:edge.node.answers.nodes.map(node=>({text:node.content.replace(/(<br \/>)/gi,"\n").replace(/(<([^>]+)>)/gi,""),attachments:node.attachments}))}));return new Promise(resolve=>resolve({status:"Success",total:results.length,result:results.length?results:"Didn't find any result"}))}catch(err){return new Promise((_,reject)=>{reject({status:"Error",total:0,result:err.message})})}}}exports.default = Brainly;
